
#include <iostream>
using namespace std;
int **arr,start,spot,amount;
int *done,locate = -1,findLocate = 0;
bool exist(int target)
{
	for (int i = 0; i <= locate; i++)
	{
		if (done[i] == target)
			return true;
	}
	return false;
}

bool othLink(int s)
{
	for (int i = 0; i < amount; i++)
	{
		if (arr[i][0] == s)
		{
			return true;
		}
		else if (arr[i][1] == s)
		{
			return true;
		}
	}
	return false;
}
int getLink(int s)
{
	int retValue = -1;
	for (int i = 0; i < amount; i++)
	{
		if (arr[i][0] == s)
		{
			retValue = arr[i][1];
			arr[i][0] = 0;
			arr[i][1] = 0;
			break;
		}
		else if(arr[i][1] == s)
		{
			retValue = arr[i][0];
			arr[i][0] = 0;
			arr[i][1] = 0;
			break;
		}
	}
	return retValue;
}
void BFS(int i)
{
	if (locate != spot)
	{
		while (othLink(i))
		{
			int get = getLink(i);
			if (!exist(get))
				done[++locate] = get;

			if (locate == spot)
				break;
		}
		BFS(done[++findLocate]);
	}
}
int main()
{
	cin >> start >> spot >> amount;
	arr = new int*[amount];
	for (int i = 0; i < amount; i++)
	{
		arr[i] = new int[2];
	}
	for (int i = 0; i < amount; i++)
	{
		cin >> arr[i][0] >> arr[i][1];
	}
	done = new int[amount];
	done[++locate] = start;
	BFS(start);
	
	for (int i = 0; i < spot; i++)
	{
		cout << done[i] << " ";
	}
	
}

